stages:
  - validate
  - test
  - build
  - deploy
  - cleanup

include:
  - project: hegerdes/templates
    file: /gitlab/ci/snippets.yml
  - component: gitlab.com/components/sast/sast@main
    rules:
      - if: $SAST_DISABLED == "true"
        when: never
  - component: gitlab.com/components/secret-detection/secret-detection@main
    rules:
      - if: $SECRET_DETECTION_DISABLED == "true"
        when: never
  - component: gitlab.com/hegerdes/gitlab-actions/pre-commit@main
  - component: gitlab.com/components/opentofu/job-templates@main
    inputs:
      version: latest
      opentofu_version: 1.7.1

variables:
  KUBE_CONTEXT: gitlab-ci
  # Replace with your agent's numeric ID
  GL_K8S_AGENT_ID: 1080383
  # For none gitlab.com use https://<GITLAB_DOMAIN>/-/kubernetes-agent/k8s-proxy/
  GL_K8S_PROXY_URL: https://kas.gitlab.com/k8s-proxy/

.tf_stacks: &tf_stacks
  - TF_ROOT: infra/k8s-ci-test
    TF_STATE_NAME: k8s-test
  - TF_ROOT: infra/hcloud-ci-test
    TF_STATE_NAME: hcloud

pre-commit:
  allow_failure: true

AZ:auth:
  image: mcr.microsoft.com/azure-cli:latest
  stage: .pre
  before_script: []
  id_tokens:
    GITLAB_OIDC_TOKEN:
      aud: https://gitlab.com
  variables:
    AZURE_CLIENT_ID: $AZURE_ENTRA_ID_GITLAB_CI_CLIENT_ID
    AZURE_TENANT_ID: $AZURE_TENANT_ID_HEGERDES
    AZURE_KEY_VAULT_SERVER_URL: https://hegerdes.vault.azure.net
  # NOTE: Only supported on premium or ultimate
  secrets:
    DEMO_SECRET:
      token: $GITLAB_OIDC_TOKEN
      azure_key_vault:
        name: hcloud-k8s-token
  script:
    - az login --service-principal -u "${AZURE_CLIENT_ID}" -t "${AZURE_TENANT_ID}" --federated-token $GITLAB_OIDC_TOKEN
    - echo HCLOUD_TOKEN=$(az keyvault secret show --vault-name hegerdes --name hcloud-k8s-token | jq -r .value) >> job.env
  artifacts:
    expire_in: 15 min
    access: developer
    reports:
      dotenv: job.env
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    - if: "$CI_OPEN_MERGE_REQUESTS"
      when: never
    - if: "$CI_COMMIT_BRANCH"

TF:fmt:
  extends: [.opentofu:fmt]
  parallel:
    matrix: *tf_stacks

TF:validate:
  extends: [.opentofu:validate]
  parallel:
    matrix: *tf_stacks

TF:plan:
  extends: [.opentofu:plan]
  needs: [AZ:auth]
  before_script:
    - !reference [.snippets, kubectl-install]
    - !reference [.snippets, kubectl-gitlab-agent]
  parallel:
    matrix: *tf_stacks

TF:apply:
  extends: [.opentofu:apply]
  needs: [AZ:auth, TF:plan]
  before_script:
    - !reference [.snippets, kubectl-install]
    - !reference [.snippets, kubectl-gitlab-agent]
  parallel:
    matrix: *tf_stacks
