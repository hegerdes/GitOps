# Docs
# Config map options: https://docs.cilium.io/en/stable/network/kubernetes/configuration/#configmap-options

# Use kubeproxy replacement & talos kubeprism
k8sServiceHost: localhost
k8sServicePort: 7445
kubeProxyReplacement: true
rollOutCiliumPods: true
annotateK8sNode: true
loadBalancer:
  algorithm: maglev
  serviceTopology: true

envoy:
  enabled: false

# routingMode: "native" # default is tunnel
# directRoutingSkipUnreachable: true
# autoDirectNodeRoutes: true
# ipv4NativeRoutingCIDR: "10.0.0.0/8"
# ipv4NativeRoutingCIDR: "10.244.0.0/16"

endpointRoutes:
  enabled: true

ipv4:
  enabled: true
ipv6:
  enabled: ${ipv6_enabled}

enableIPv4Masquerade: true
enableIPv6Masquerade: true

ipam:
  mode: kubernetes
  operator:
    # -- IPv4 CIDR list range to delegate to individual nodes for IPAM.
    clusterPoolIPv4PodCIDRList:
      - 10.244.0.0/16
    clusterPoolIPv6PodCIDRList:
      - fd00:10:244::/48 # Unique local

bandwidthManager:
  enabled: true
bpf:
  masquerade: true
cgroup:
  autoMount:
    enabled: false
  hostRoot: /sys/fs/cgroup

hostFirewall:
  enabled: true
operator:
  rollOutPods: true
  replicas: 1
hubble:
  enabled: true
  rollOutPods: true
  relay:
    enabled: true
    rollOutPods: true

gatewayAPI:
  enabled: false

ingressController:
  enabled: false
  loadbalancerMode: dedicated
  # enableProxyProtocol: true
  service:
    insecureNodePort: 31080
    secureNodePort: 31443
    annotations:
      load-balancer.hetzner.cloud/location: fsn1
      load-balancer.hetzner.cloud/name: k8s-worker-ingress-cilium
      load-balancer.hetzner.cloud/use-private-ip: "true"
      load-balancer.hetzner.cloud/network: "k8s-network"
      # load-balancer.hetzner.cloud/uses-proxyprotocol: "true"

securityContext:
  capabilities:
    ciliumAgent:
      - CHOWN
      - KILL
      - NET_ADMIN
      - NET_RAW
      - IPC_LOCK
      - SYS_ADMIN
      - SYS_RESOURCE
      - DAC_OVERRIDE
      - FOWNER
      - SETGID
      - SETUID
    cleanCiliumState:
      - NET_ADMIN
      - SYS_ADMIN
      - SYS_RESOURCE

podAnnotations:
  cluster-autoscaler.kubernetes.io/enable-ds-eviction: "true"

prometheus:
  metricsService: true
  enabled: true
  port: 9962
  serviceMonitor:
    enabled: true
    interval: "30s"
