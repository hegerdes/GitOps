machine:
  kubelet:
    nodeIP:
      validSubnets:
      %{ for subnet in subnets ~}
      - ${subnet}
      %{ endfor ~}

    extraConfig:
      serverTLSBootstrap: true
      serializeImagePulls: false
      maxParallelImagePulls: 8
      nodeStatusMaxImages: 100
      maxPods: 220
      readOnlyPort: 0
      failSwapOn: true

    extraArgs:
        cloud-provider: external

  sysctls:
    # user.max_user_namespaces: 15000 # Maybe not good but gvisor wants it. See https://kspp.github.io/Recommended_Settings#sysctls
    net.ipv4.tcp_fastopen: 1
    net.ipv4.icmp_echo_ignore_broadcasts: 1
    vm.overcommit_memory: 1
    kernel.pid_max: 4194304
    kernel.randomize_va_space: 2
    net.ipv4.tcp_syncookies: 1
    net.ipv4.icmp_ignore_bogus_error_responses: 1
    net.ipv4.tcp_rfc1337: 1
    net.ipv4.ip_local_port_range: 10240 65535

#  registries:
#    mirrors:
#      ghcr.io:
#        endpoints:
#          - https://ghcr.mirror.123preview.app
#      registry.k8s.io:
#        endpoints:
#          - https://k8s.mirror.123preview.app

  network:
    kubespan:
      enabled: true
#    nameservers:
#        - 2606:4700:4700::1111 # Cloudflare
#        - 2606:4700:4700::1001 # Cloudflare
    extraHostEntries:
    - ip: ${controlplane_internal_ip}
      aliases:
      - ${controlplane_endpoint_internal}

%{ if nodeRole == "controlplane" }
  features:
    rbac: true
    hostDNS:
      enabled: true
      resolveMemberNames: true
    kubernetesTalosAPIAccess:
        enabled: true
        allowedRoles:
          - os:reader
        # - os:admin
        # - os:operator
        # - os:etcd:backup
        allowedKubernetesNamespaces:
          - kube-system
          - cluster-autoscaler
%{ endif }

  certSANs:
  %{ for SAN in machineCertSANs ~}
    - ${SAN}
  %{ endfor ~}

  nodeLabels:
  %{ for k,v in nodeLabels ~}
    ${k}: ${v}
  %{ endfor ~}

%{ if nodeRole == "controlplane" }
cluster:
  allowSchedulingOnControlPlanes: true
  adminKubeconfig:
      certLifetime: 8h0m0s
  apiServer:
    certSANs:
    %{ for SAN in apiServerCertSANs ~}
      - ${SAN}
    %{ endfor ~}

      # Extra arguments to supply to the API server.
    extraArgs:
    %{ for k, v in extraArgsApiServer ~}
      ${k}: "${v}"
    %{ endfor ~}


  inlineManifests: []
  extraManifests:
    - https://github.com/kubernetes-sigs/gateway-api/releases/download/v1.1.0/standard-install.yaml
    - https://raw.githubusercontent.com/alex1989hu/kubelet-serving-cert-approver/main/deploy/standalone-install.yaml

  network:
    cni:
        name: none
  proxy:
    disabled: true
  discovery:
    enabled: true
    # Configure registries used for cluster member discovery.
    registries:
      kubernetes: # Kubernetes registry is problematic with KubeSpan, if the control plane endpoint is routed via KubeSpan.
        disabled: true
      service: {}
%{ endif }
